#include "kernel/config/boot.h"
#include "kernel/boot.h"

#include "lib/common.h"

OUTPUT_FORMAT("binary")
OUTPUT_ARCH(i386)
ENTRY(_start)


SECTIONS
{
  .bstext BOOT_MBR_START : AT(0x00) { 
    *(.bstext) 
  }
  _bs_end = .;

  .ldrtext BOOT_LDR_START : AT(BOOT_SEC_SIZE * BOOT_LDR_SEC_START) { 
    *(.ldrtext) 
  }
  _ldr_end = .;

  .text BOOT_KERNEL_ENTRY_START : AT(BOOT_SEC_SIZE * BOOT_KERNEL_SEC_START) {
    *(.text*) 
  }
  .data : { 
    *(.data*) 
  }
  .rodata : { 
    *(.rodata*) 
  }
  .bss : { 
    *(.bss*) 
  }
  _kernel_end = .;

  /DISCARD/ : {
    *(.note*)
  }

  . = ASSERT(_bs_end - BOOT_MBR_START == BOOT_SEC_SIZE, "boot sector size mismatch");

  . = ASSERT(_ldr_end - BOOT_LDR_START <= BOOT_SEC_SIZE * BOOT_LDR_SIZE, "boot loader too big, please increase BOOT_LDR_SIZE");
  . = ASSERT(_ldr_end - BOOT_LDR_START >= BOOT_SEC_SIZE * (BOOT_LDR_SIZE - BOOT_LDR_SIZE_INTERVAL), "boot loader too small, please decrease BOOT_LDR_SIZE");

  . = ASSERT(_kernel_end - BOOT_KERNEL_ENTRY_START <= BOOT_SEC_SIZE * BOOT_KERNEL_SIZE, "kernel too big, please increase BOOT_KERNEL_SIZE");
  . = ASSERT(_kernel_end - BOOT_KERNEL_ENTRY_START >= BOOT_SEC_SIZE * (BOOT_KERNEL_SIZE - BOOT_KERNEL_SIZE_INTERVAL), "kernel too small, please decrease BOOT_KERNEL_SIZE");
}